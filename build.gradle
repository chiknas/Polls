plugins {
    id 'org.springframework.boot' version '2.0.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'war'
}

war {
    enabled = true
}

group = 'com.chiknas'
version = '0.1'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven {
        url "http://maven.vaadin.com/vaadin-addons"
    }
}

ext {
    set('vaadinVersion', "13.0.13")
}

dependencies {
    //heroku
    compile 'com.github.jsimone:webapp-runner:8.5.28.0'
    implementation 'org.postgresql:postgresql'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.vaadin:vaadin-spring-boot-starter'
    implementation 'com.vaadin:vaadin-charts-flow'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }
}

test {
    useJUnitPlatform()
}

//HEROKU DEPLOYMENT SETUP
task stage() {
    dependsOn clean, war
}
war.mustRunAfter clean

task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

stage.dependsOn(copyToLib)
